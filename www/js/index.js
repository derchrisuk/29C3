// Generated by CoffeeScript 1.3.3
var App, app, programXML, xmlLoader;

App = (function() {

  App.programXML;

  function App() {
    document.addEventListener('deviceready', this.deviceready(), false);
  }

  App.prototype.deviceready = function() {
    var a, date, dateSplitted, dayIndex, dayNode, dayTab, pageHref, _i, _len, _ref, _results;
    _ref = programXML.find('day');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      dayNode = _ref[_i];
      dayNode = $(dayNode);
      date = dayNode.attr('date');
      dateSplitted = date.split('-');
      dayNode.dayForUI = parseInt(dateSplitted[2]) + '. ' + helper.i18nDateFormats.monthNames[parseInt(dateSplitted[1]) - 1];
      dayTab = $('.tabs li:first').clone();
      dayIndex = dayNode.attr('index');
      dayTab.attr({
        'data-day-index': dayIndex
      });
      pageHref = "#schedule#" + dayIndex;
      a = dayTab.find('a:first');
      a.attr('href', pageHref);
      a.html(dayNode.dayForUI);
      $('.tabs').append($('<div />').append(dayTab.show()).html());
      if (helper.formatDate(new Date(), 'yyyy-mm-dd') === date) {
        _results.push(document.location.href = pageHref);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  return App;

})();

xmlLoader = new ScheduleXMLLoader();

xmlLoader.appStartUpLoad();

programXML = xmlLoader.getXMLTree();

$(document).bind('pagebeforechange', function(event, data) {
  var dayNode, parsedUrl, _i, _len, _ref, _results;
  if (typeof data.toPage === 'string') {
    parsedUrl = $.mobile.path.parseUrl(data.toPage);
    if (parsedUrl.filename === 'index.html' && /^#schedule#/.test(parsedUrl.hash)) {
      _ref = programXML.find('day');
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        dayNode = _ref[_i];
        dayNode = $(dayNode);
        if (dayNode.attr('index') === parsedUrl.hash.split('#')[2]) {
          schedule.initialize(dayNode, data.option);
          event.preventDefault();
          break;
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }
  }
});

app = new App();
