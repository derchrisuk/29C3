// Generated by CoffeeScript 1.3.3
var Twitter, twitter;

Twitter = (function() {

  function Twitter() {}

  Twitter.callbackURL;

  Twitter.prototype.authenticate = function() {
    var accessor, authorizationHeader, message, receiveRequestToken, requestBody, requestToken;
    accessor = {
      consumerKey: config.twitter.consumerKey,
      consumerSecret: config.twitter.consumerSecret,
      serviceProvider: {
        signatureMethod: 'HMAC-SHA1',
        requestTokenURL: 'http://api.twitter.com/oauth/request_token',
        userAuthorizationURL: 'https://api.twitter.com/oauth/authorize',
        accessTokenURL: 'https://api.twitter.com/oauth/access_token',
        echoURL: 'http://localhost/oauth-provider/echo'
      }
    };
    message = {
      method: 'post',
      action: accessor.serviceProvider.requestTokenURL,
      parameters: [['scope', 'http://www.google.com/m8/feeds/']]
    };
    requestBody = OAuth.formEncode(message.parameters);
    OAuth.completeRequest(message, accessor);
    authorizationHeader = OAuth.getAuthorizationHeader('', message.parameters);
    requestToken = new XMLHttpRequest();
    requestToken.onreadystatechange = receiveRequestToken = function() {
      var authorize_url, oauth_token, results;
      if (requestToken.readyState === 4) {
        results = OAuth.decodeForm(requestToken.responseText);
        oauth_token = OAuth.getParameter(results, 'oauth_token');
        authorize_url = 'http://api.twitter.com/oauth/authorize?oauth_token=' + oauth_token;
        window.plugins.childBrowser.onLocationChange = function(loc) {
          var receiveAccessToken, requestAccess;
          if (loc.indexOf(config.twitter.successCallbackUrl) > -1) {
            window.plugins.childBrowser.close();
            results = OAuth.decodeForm(requestToken.responseText);
            message = {
              method: 'post',
              action: accessor.serviceProvider.accessTokenURL
            };
            OAuth.completeRequest(message, {
              consumerKey: accessor.consumerKey,
              consumerSecret: accessor.consumerSecret,
              token: OAuth.getParameter(results, 'oauth_token'),
              tokenSecret: OAuth.getParameter(results, 'oauth_token_secret')
            });
            requestAccess = new XMLHttpRequest();
            requestAccess.onreadystatechange = receiveAccessToken = function() {
              var params;
              if (requestAccess.readyState === 4) {
                params = helper.get_url_vars_from_string(requestAccess.responseText);
                userconfig.setItem('twitter_token', params['oauth_token']);
                userconfig.setItem('twitter_secret_token', params['oauth_token_secret']);
                userconfig.setItem('twitter_user_name', params['screen_name']);
                return userconfig.setItem('twitter_user_id', params['user_id']);
              }
            };
            requestAccess.open(message.method, message.action, true);
            requestAccess.setRequestHeader('Authorization', OAuth.getAuthorizationHeader('', message.parameters));
            return requestAccess.send();
          }
        };
        return window.plugins.childBrowser.showWebPage(authorize_url);
      }
    };
    requestToken.open(message.method, message.action, true);
    requestToken.setRequestHeader('Authorization', authorizationHeader);
    requestToken.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    return requestToken.send(requestBody);
  };

  Twitter.prototype.is_authenticated = function() {
    return userconfig.getItem('twitter_token') && userconfig.getItem('twitter_secret_token');
  };

  return Twitter;

})();

twitter = new Twitter();
